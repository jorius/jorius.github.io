{"version":3,"sources":["configuration/index.js","components/commons/loading-page/styles.js","components/commons/loading-page/index.js","assets/img/avatar.jpg","components/commons/about-me/styles.js","components/commons/about-me/index.js","components/commons/github-repo/styles.js","components/commons/github-repo/index.js","pages/home-page/styles.js","pages/home-page/index.js","pages/not-found-page/index.js","pages/settings-page/styles.js","configuration/mapper.js","pages/settings-page/index.js","configuration/routes.js","styles/material-ui-theme.js","containers/app.js","index.js","utils/string.js","store/actions/github.js","store/actions/loading.js","store/actions/settings.js","store/reducers/github.js","store/reducers/settings.js","store/reducers/index.js","store/reducers/loading.js","store/store.js","languages/index.js","core/index.js","core/http-interceptors.js"],"names":["mappedLanguages","en_US","languages","es_LA","applyLanguage","languageCode","config","this","language","languageList","Object","keys","map","label","configuration","getConfiguration","global","mainRoutes","mainAppRoutes","route","component","exact","path","services","_ref","github","JSON","parse","stringify","replace","RegExp","process","buildServices","initialState","routes","settings","useStyles","makeStyles","background","backgroundColor","bottom","left","position","right","top","centerPanel","textAlign","transform","LoadingPage","visible","classes","_jsxs","className","loadingPage","children","_jsx","CircularProgress","color","size","theme","aboutMe","avatarContainer","display","justifyContent","avatar","borderRadius","height","width","aboutMeCard","padding","palette","custom","white","main","boxShadow","concat","blue","light","title","breakpoints","up","fontSize","down","text","secondary","fontWeight","marginBottom","AboutMe","caption","description","name","Grid","container","Card","alignContent","alignItems","direction","justify","item","lg","sm","xs","CardContent","Typography","variant","CardMedia","image","dark","githubRepo","black","borderBottom","GithubRepo","url","gutterBottom","Link","href","defaultProps","responsiveTitleStyles","marginTop","footer","yellow","githubTitle","homePage","paddingLeft","paddingRight","props","repos","homePageLanguages","homePageTitle","languageButton","textTransform","HomePage","dispatch","useDispatch","useSelector","state","Boolean","length","useEffect","getGithubUserRepos","Button","onClick","setLanguageCode","repo","id","common","target","NotFoundPage","notFoundPage","settingsPage","paddingTop","textField","components","SettingsPage","currentLanguageCode","TextField","changeLanguage","onChange","value","placeholder","select","MenuItem","MainRoutes","loading","_Fragment","Switch","index","Route","componentName","customPalette","green","grey","orange","red","materialCustomTheme","createMuiTheme","overrides","MuiFormLabel","root","MuiInput","underline","MuiInputLabel","formControl","MuiSelect","icon","primary","typography","fontFamily","join","AppContainer","Provider","store","ThemeProvider","CssBaseline","BrowserRouter","dotenv","ReactDOM","render","React","StrictMode","document","getElementById","GET_GITHUB_USER_REPOS","userName","axios","get","string","formattedString","_len","arguments","params","Array","_key","forEach","param","indexOf","parseStringParams","then","response","repositories","async","languages_url","key","defaultBranch","html_url","Promise","all","payload","type","catch","reject","TOGGLE_LOADING_PAGE_VISIBILITY","toggleLoadingPageVisibility","SET_LANGUAGE_CODE","githubReducer","combineReducers","undefined","action","sort","a","b","settingsReducer","mainReducer","rootReducer","createReduxStore","middlewares","createLogger","thunk","createStore","composeWithDevTools","applyMiddleware","getCore","core","reduxStore","addHttpInterceptors","handleLoadingPageVisibility","show","getState","_ref4","_ref2","interceptors","request","use","error","addRequestInterceptors","_ref3","data","addResponseInterceptors"],"mappings":"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","file":"static/js/main.55daec1e.chunk.js","sourcesContent":["/* eslint-disable camelcase */\r\n\r\n// @languages\r\nimport languages from '../languages';\r\n\r\n// @menus\r\nimport mainAppRoutes from './routes/main-routes.json';\r\n\r\n// @services\r\nimport github from './services/github.json';\r\n\r\n// @state\r\nimport initialState from '../store/state/initial-state.json';\r\n\r\n// @constants\r\nconst mappedLanguages = {\r\n  en_US: languages.en_US,\r\n  es_LA: languages.es_LA,\r\n};\r\n\r\nfunction applyLanguage(languageCode) {\r\n  const config = this;\r\n\r\n  config.language = mappedLanguages[languageCode];\r\n\r\n  config.languageList = Object.keys(mappedLanguages).map((language) => ({\r\n    label: config.language.languages[language],\r\n    languageCode: language,\r\n  }));\r\n}\r\n\r\nconst buildRoutes = (routes) => routes.map((route) => ({\r\n  component: route.component,\r\n  exact: route?.exact,\r\n  path: route.path,\r\n}));\r\n\r\nconst buildServices = ({ github }) => ({\r\n  github: JSON.parse(\r\n    JSON.stringify(github)\r\n      .replace(\r\n        new RegExp('{root}', 'g'),\r\n        process.env.REACT_APP_GITHUB_SERVICES_BASE_URL\r\n      )\r\n  )\r\n});\r\n\r\nconst getConfiguration = () => {\r\n  if (global.config) {\r\n    return global.config;\r\n  }\r\n\r\n  const mainRoutes = buildRoutes(mainAppRoutes);\r\n  const services = buildServices({ github });\r\n\r\n  const config = {\r\n    applyLanguage,\r\n    initialState,\r\n    routes: mainRoutes,\r\n    services,\r\n  };\r\n\r\n  config.applyLanguage(config.initialState.settings.languageCode);\r\n  global.config = config;\r\n  return config;\r\n};\r\n\r\nexport const configuration = getConfiguration();\r\n","// @packages\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles(() => ({\r\n  background: {\r\n    backgroundColor: 'rgba(0, 0, 0, 0.4)',\r\n    bottom: 0,\r\n    left: 0,\r\n    position: 'fixed',\r\n    right: 0,\r\n    top: 0,\r\n  },\r\n  centerPanel: {\r\n    left: '50%',\r\n    position: 'fixed',\r\n    textAlign: 'center',\r\n    top: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n  },\r\n}));\r\n","// @packages\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport React from 'react';\r\n\r\n// @styles\r\nimport { useStyles } from './styles';\r\n\r\nconst LoadingPage = ({ visible }) => {\r\n  const classes = useStyles();\r\n\r\n  if (!visible) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.loadingPage}>\r\n      <div className={classes.background} />\r\n      <div className={classes.centerPanel}>\r\n        <CircularProgress\r\n          color=\"secondary\"\r\n          size={50}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingPage;\r\n","export default __webpack_public_path__ + \"static/media/avatar.24736147.jpg\";","// @packages\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  aboutMe: {\r\n  },\r\n  avatarContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  avatar: {\r\n    borderRadius: 4,\r\n    height: 200,\r\n    width: 200,\r\n  },\r\n  aboutMeCard: {\r\n    padding: 15,\r\n    backgroundColor: theme.palette.custom.white.main,\r\n    boxShadow: `2px 3px 4px 1px ${theme.palette.custom.blue.light}`,\r\n    height: '100%',\r\n    width: '100%',\r\n  },\r\n  title: {\r\n    [theme.breakpoints.up('lg')]: {\r\n      fontSize: '2.125rem',\r\n    },\r\n    [theme.breakpoints.down('md')]: {\r\n      fontSize: '1.5rem',\r\n    },\r\n    [theme.breakpoints.down('xs')]: {\r\n      fontSize: '1.25rem',\r\n    },\r\n    '&>small': {\r\n      color: theme.palette.text.secondary,\r\n      fontSize: '1rem',\r\n    },\r\n    fontWeight: 'bold',\r\n    marginBottom: 25,\r\n  },\r\n}));\r\n","/* eslint-disable max-len */\r\n\r\n// @packages\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n// @styles\r\nimport { useStyles } from './styles';\r\n\r\nconst AboutMe = ({\r\n  avatar,\r\n  caption,\r\n  description,\r\n  name,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container className={classes.aboutMe}>\r\n      <Card className={classes.aboutMeCard}>\r\n        <Grid\r\n          alignContent=\"space-between\"\r\n          alignItems=\"center\"\r\n          container\r\n          direction=\"row\"\r\n          justify=\"center\"\r\n        >\r\n          <Grid item lg={10} sm={9} xs={12}>\r\n            <CardContent>\r\n              <Typography className={classes.title}>\r\n                {name}\r\n                <small>\r\n                  {caption}\r\n                </small>\r\n              </Typography>\r\n              <Typography color=\"textPrimary\" variant=\"body1\">\r\n                {description}\r\n              </Typography>\r\n            </CardContent>\r\n\r\n          </Grid>\r\n          <Grid\r\n            className={classes.avatarContainer}\r\n            item\r\n            lg={2}\r\n            sm={3}\r\n            xs={12}\r\n          >\r\n            <CardMedia\r\n              className={classes.avatar}\r\n              image={avatar}\r\n              title=\"avatar\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nAboutMe.propTypes = {\r\n  avatar: PropTypes.string.isRequired,\r\n  caption: PropTypes.string.isRequired,\r\n  description: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default AboutMe;\r\n","// @packages\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  description: {\r\n    color: theme.palette.custom.white.dark,\r\n  },\r\n  githubRepo: {\r\n    backgroundColor: theme.palette.custom.black.dark,\r\n    borderBottom: `1px solid ${theme.palette.custom.white.light}`,\r\n    boxShadow: `2px 5px 10px 4px ${theme.palette.custom.black.dark}`,\r\n    marginBottom: 15,\r\n  },\r\n  title: {\r\n    color: theme.palette.custom.blue.main,\r\n    fontWeight: 'bold',\r\n  },\r\n}));\r\n","// @packages\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Link from '@material-ui/core/Link';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n// @styles\r\nimport { useStyles } from './styles';\r\n\r\nconst GithubRepo = ({\r\n  description,\r\n  name,\r\n  url,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.githubRepo}>\r\n      <CardContent>\r\n        <Typography gutterBottom>\r\n          <Link className={classes.title} href={url}>{name}</Link>\r\n        </Typography>\r\n        <Typography className={classes.description} variant=\"body1\">\r\n          {description}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nGithubRepo.propTypes = {\r\n  description: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n  url: PropTypes.string.isRequired,\r\n};\r\n\r\nGithubRepo.defaultProps = {\r\n  description: '',\r\n};\r\n\r\nexport default GithubRepo;\r\n","// @packages\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n// @constants\r\nconst responsiveTitleStyles = (theme) => ({\r\n  [theme.breakpoints.up('lg')]: {\r\n    fontSize: '2.125rem',\r\n  },\r\n  [theme.breakpoints.down('md')]: {\r\n    fontSize: '1.5rem',\r\n  },\r\n  [theme.breakpoints.down('xs')]: {\r\n    fontSize: '1.25rem',\r\n  },\r\n});\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  aboutMe: {\r\n    marginBottom: 25,\r\n    marginTop: 25,\r\n  },\r\n  footer: {\r\n    '&>p>a': {\r\n      color: theme.palette.custom.yellow.dark,\r\n    },\r\n    color: theme.palette.custom.yellow.main,\r\n    marginTop: 100,\r\n    textAlign: 'center',\r\n  },\r\n  githubTitle: {\r\n    ...responsiveTitleStyles(theme),\r\n    marginBottom: 25,\r\n    marginTop: 25,\r\n  },\r\n  homePage: {\r\n    [theme.breakpoints.up('lg')]: {\r\n      paddingLeft: '25%',\r\n      paddingRight: '25%',\r\n    },\r\n    backgroundColor: theme.palette.custom.black.dark,\r\n    color: theme.palette.custom.white.light,\r\n    height: (props) => `${!props.repos ? '100vh' : 'auto'}`,\r\n    padding: 25,\r\n    width: '100%',\r\n  },\r\n  homePageLanguages: {\r\n  },\r\n  homePageTitle: {\r\n    ...responsiveTitleStyles(theme),\r\n  },\r\n  languageButton: {\r\n    textTransform: 'none',\r\n  },\r\n}));\r\n","// @packages\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Link from '@material-ui/core/Link';\r\nimport React, { useEffect } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n// @actions\r\nimport { getGithubUserRepos, setLanguageCode } from '../../store';\r\n\r\n// @images\r\nimport avatar from '../../assets/img/avatar.jpg';\r\n\r\n// @components\r\nimport AboutMe from '../../components/commons/about-me';\r\nimport GithubRepo from '../../components/commons/github-repo';\r\n\r\n// @configuration\r\nimport { configuration } from '../../configuration';\r\n\r\n// @styles\r\nimport { useStyles } from './styles';\r\n\r\nconst HomePage = () => {\r\n  const dispatch = useDispatch();\r\n  const { repos } = useSelector((state) => state.github);\r\n\r\n  const classes = useStyles({ repos: Boolean(repos.length) });\r\n\r\n  useEffect(() => {\r\n    dispatch(getGithubUserRepos(process.env.REACT_APP_GITHUB_USERNAME));\r\n  }, []);\r\n\r\n  return (\r\n    <Grid\r\n      className={classes.homePage}\r\n      container\r\n      justify=\"center\"\r\n    >\r\n      <Typography className={classes.homePageTitle}>\r\n        {configuration.language.homePage.title}\r\n      </Typography>\r\n      <Grid className={classes.homePageLanguages}>\r\n        <Button\r\n          className={classes.languageButton}\r\n          color=\"primary\"\r\n          onClick={() => { dispatch(setLanguageCode('es_LA')); }}\r\n          size=\"small\"\r\n        >\r\n          {configuration.language.languages.es_LA}\r\n        </Button>\r\n        |\r\n        <Button\r\n          className={classes.languageButton}\r\n          color=\"secondary\"\r\n          onClick={() => { dispatch(setLanguageCode('en_US')); }}\r\n          size=\"small\"\r\n        >\r\n          {configuration.language.languages.en_US}\r\n        </Button>\r\n      </Grid>\r\n      <Grid className={classes.aboutMe} container direction=\"column\">\r\n        <AboutMe\r\n          avatar={avatar}\r\n          caption={configuration.language.aboutMe.caption}\r\n          description={configuration.language.aboutMe.description}\r\n          name={configuration.language.aboutMe.name}\r\n        />\r\n      </Grid>\r\n      <Typography className={classes.githubTitle}>\r\n        {repos.length\r\n          ? configuration.language.homePage.githubTitle\r\n          : null}\r\n      </Typography>\r\n      <Grid>\r\n        {repos.length\r\n          ? repos.map((repo) => (\r\n            <Grid key={repo.id} item>\r\n              <GithubRepo {...repo} />\r\n            </Grid>\r\n          ))\r\n          : null}\r\n      </Grid>\r\n      <Grid className={classes.footer}>\r\n        <Typography variant=\"caption\">\r\n          {configuration.language.common.footer}\r\n        </Typography>\r\n        <Typography variant=\"body2\">\r\n          <Link target=\"_blank\" href=\"https://icons8.com/icons/set/pixel-cat\">Favicon Pixel Cat Icon by Icons8</Link>\r\n        </Typography>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","// @packages\r\nimport React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n// @configuration\r\nimport { configuration } from '../../configuration';\r\n\r\nconst NotFoundPage = () => (\r\n  <Grid\r\n    alignContent=\"center\"\r\n    alignItems=\"center\"\r\n    container\r\n    justify=\"center\"\r\n  >\r\n    <Typography variant=\"h4\">\r\n      {configuration.language.notFoundPage.title}\r\n    </Typography>\r\n  </Grid>\r\n);\r\n\r\nexport default NotFoundPage;\r\n","// @packages\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  settingsPage: {\r\n    backgroundColor: theme.palette.custom.black.main,\r\n    color: theme.palette.custom.white.light,\r\n    height: '100vh',\r\n    paddingTop: 25,\r\n  },\r\n  textField: {\r\n    marginTop: 50,\r\n    width: '100%',\r\n  },\r\n}));\r\n","// @components\r\nimport {\r\n  HomePage,\r\n  NotFoundPage,\r\n  SettingsPage,\r\n} from '../pages';\r\n\r\nconst components = {\r\n  HomePage,\r\n  NotFoundPage,\r\n  SettingsPage,\r\n};\r\n\r\nexport const mapComponent = (componentName) =>\r\n  components[componentName];\r\n","// @packages\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n// @actions\r\nimport { setLanguageCode } from '../../store';\r\n\r\n// @configuration\r\nimport { configuration } from '../../configuration';\r\n\r\n// @styles\r\nimport { useStyles } from './styles';\r\n\r\nconst SettingsPage = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const currentLanguageCode = useSelector((state) => state.settings.languageCode);\r\n\r\n  const handleOnChangeField = ({ target: { value: languageCode } }) => {\r\n    dispatch(setLanguageCode(languageCode));\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      className={classes.settingsPage}\r\n      container\r\n      justify=\"center\"\r\n    >\r\n      <Grid item>\r\n        <Typography variant=\"h4\">\r\n          {configuration.language.settingsPage.title}\r\n        </Typography>\r\n        <TextField\r\n          className={classes.textField}\r\n          label={configuration.language.common.changeLanguage}\r\n          onChange={handleOnChangeField}\r\n          placeholder={configuration.language.common.changeLanguage}\r\n          select\r\n          value={currentLanguageCode}\r\n        >\r\n          {configuration.languageList.map((language) => (\r\n            <MenuItem\r\n              key={language.languageCode}\r\n              value={language.languageCode}\r\n            >\r\n              {language.label}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default SettingsPage;\r\n","// @packages\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\n// @components\r\nimport LoadingPage from '../components/commons/loading-page';\r\n\r\n// @configuration\r\nimport { configuration } from './index';\r\n\r\n// @utils\r\nimport { mapComponent } from './mapper';\r\n\r\nconst MainRoutes = () => {\r\n  const { languageCode } = useSelector((state) => state.settings);\r\n  const { loading } = useSelector((state) => state);\r\n\r\n  configuration.applyLanguage(languageCode);\r\n\r\n  const mapRoutes = () => configuration.routes.map((route, index) => (\r\n    <Route\r\n      component={mapComponent(route.component)}\r\n      exact={route.exact}\r\n      key={`${route.path}-${index}`}\r\n      path={route.path}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <>\r\n      <LoadingPage visible={loading} />\r\n      <Switch>\r\n        {mapRoutes()}\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainRoutes;\r\n","// @packages\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nexport const customPalette = {\r\n  black: {\r\n    dark: '#272727',\r\n    light: '#59636A',\r\n    main: '#414348',\r\n  },\r\n  blue: {\r\n    dark: '#052F5F',\r\n    light: '#4F9FFF',\r\n    main: '#2088FF',\r\n  },\r\n  green: {\r\n\r\n  },\r\n  grey: {\r\n    dark: '#8E8597',\r\n    light: '#A4A5AE',\r\n    main: '#9895A3',\r\n  },\r\n  orange: {\r\n    dark: '#C45B00',\r\n    light: '#FF8E5C',\r\n    main: '#EC7C23',\r\n  },\r\n  red: {\r\n    dark: '#840003',\r\n    light: '#D79087',\r\n    main: '#cb3837',\r\n  },\r\n  yellow: {\r\n    dark: '#E7BB51',\r\n    light: '#FFEECA',\r\n    main: '#FFD166',\r\n  },\r\n  white: {\r\n    dark: '#B1BDC5',\r\n    light: '#FFFFFF',\r\n    main: '#DADDE2',\r\n  },\r\n};\r\n\r\nexport const materialCustomTheme = createMuiTheme({\r\n  overrides: {\r\n    MuiFormLabel: {\r\n      root: {\r\n        '&.Mui-focused': {\r\n          color: customPalette.white.light,\r\n        },\r\n      },\r\n    },\r\n    MuiInput: {\r\n      underline: {\r\n        // TODO: Refactor this kind of implementation.\r\n        '&:after': {\r\n          borderBottom: `2px solid ${customPalette.white.light}`,\r\n        },\r\n        // TODO: Refactor this kind of implementation.\r\n        '&.MuiInput-underline:hover:not(.Mui-disabled):before': {\r\n          borderBottom: `2px solid ${customPalette.white.dark}`,\r\n        },\r\n        borderBottom: `1px solid ${customPalette.white.dark}`,\r\n      },\r\n    },\r\n    MuiInputLabel: {\r\n      formControl: {\r\n        color: customPalette.white.light,\r\n      },\r\n    },\r\n    MuiSelect: {\r\n      icon: {\r\n        color: customPalette.white.dark,\r\n      },\r\n      root: {\r\n        color: customPalette.white.light,\r\n      },\r\n    },\r\n  },\r\n  palette: {\r\n    custom: {\r\n      ...customPalette,\r\n    },\r\n    primary: {\r\n      ...customPalette.blue,\r\n    },\r\n    secondary: {\r\n      ...customPalette.yellow,\r\n    },\r\n  },\r\n  typography: {\r\n    fontFamily: [\r\n      'Oxygen Mono',\r\n      'monospace',\r\n    ].join(',')\r\n  }\r\n});\r\n","// @packages\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport React from 'react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\n\r\n// @pages\r\nimport MainRoutes from '../configuration/routes';\r\n\r\n// @store\r\nimport { store } from '../core';\r\n\r\n// @theme\r\nimport { materialCustomTheme } from '../styles';\r\n\r\nconst AppContainer = () => (\r\n  <Provider store={store}>\r\n    <ThemeProvider theme={materialCustomTheme}>\r\n      <CssBaseline />\r\n      <BrowserRouter>\r\n        <MainRoutes />\r\n      </BrowserRouter>\r\n    </ThemeProvider>\r\n  </Provider>\r\n);\r\n\r\nexport default AppContainer;\r\n","// @packages\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport dotenv from 'dotenv';\r\n\r\n// @components\r\nimport AppContainer from './containers/app';\r\n\r\n// @styles\r\nimport './assets/css/site.css';\r\n\r\ndotenv.config();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <AppContainer />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n","export const parseStringParams = (string, ...params) => {\r\n  let formattedString = string;\r\n\r\n  params.forEach((param, index) => {\r\n    while (formattedString.indexOf(`{${index}}`) >= 0) {\r\n      formattedString = formattedString.replace(`{${index}}`, param);\r\n    }\r\n  });\r\n\r\n  return formattedString;\r\n};\r\n","// @packages\r\nimport axios from 'axios';\r\n\r\n// @core\r\nimport { configuration } from '../../configuration';\r\n\r\n// @utils\r\nimport { parseStringParams } from '../../utils';\r\n\r\n// @constants\r\nexport const GET_GITHUB_USER_REPOS = 'GET_GITHUB_USER_REPOS';\r\n\r\nexport const getGithubUserRepos = (userName) => (dispatch) =>\r\n  axios.get(parseStringParams(configuration.services.github.repos, userName))\r\n    .then((response) => {\r\n      const repositories = response.map(async (repo) => {\r\n        let languages = await axios.get(repo.languages_url);\r\n        languages = Object.keys(languages).map((key) => key);\r\n\r\n        return {\r\n          defaultBranch: repo.defaultBranch,\r\n          description: repo.description,\r\n          id: repo.id,\r\n          language: repo.language,\r\n          languages,\r\n          name: repo.name,\r\n          url: repo.html_url,\r\n        };\r\n      });\r\n\r\n      Promise.all(repositories).then((repos) => dispatch({\r\n        payload: { repos },\r\n        type: GET_GITHUB_USER_REPOS,\r\n      }));\r\n    })\r\n    .catch(Promise.reject);\r\n","// @constants\r\nexport const TOGGLE_LOADING_PAGE_VISIBILITY = 'TOGGLE_LOADING_PAGE_VISIBILITY';\r\n\r\nexport const toggleLoadingPageVisibility = (visible) => ({\r\n  type: TOGGLE_LOADING_PAGE_VISIBILITY,\r\n  payload: visible\r\n});\r\n","// @constants\r\nexport const SET_LANGUAGE_CODE = 'SET_LANGUAGE_CODE';\r\n\r\nexport const setLanguageCode = (languageCode) => ({\r\n  payload: { languageCode },\r\n  type: SET_LANGUAGE_CODE,\r\n});\r\n","// @packages\r\nimport { combineReducers } from 'redux';\r\n\r\n// @config\r\nimport { configuration } from '../../configuration';\r\n\r\n// @actions\r\nimport { GET_GITHUB_USER_REPOS } from '../actions';\r\n\r\nconst reposReducer = (\r\n  state = configuration.initialState.github.repos, action\r\n) => {\r\n  switch (action.type) {\r\n    case GET_GITHUB_USER_REPOS:\r\n      return action.payload.repos.sort((a, b) => (a.name - b.name));\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const githubReducer = combineReducers({\r\n  repos: reposReducer,\r\n});\r\n","// @packages\r\nimport { combineReducers } from 'redux';\r\n\r\n// @config\r\nimport { configuration } from '../../configuration';\r\n\r\n// @actions\r\nimport { SET_LANGUAGE_CODE } from '../actions';\r\n\r\nconst languageCodeReducer = (\r\n  state = configuration.initialState.settings.languageCode, action\r\n) => {\r\n  switch (action.type) {\r\n    case SET_LANGUAGE_CODE:\r\n      return action.payload.languageCode;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const settingsReducer = combineReducers({\r\n  languageCode: languageCodeReducer,\r\n});\r\n","// @packages\r\nimport { combineReducers } from 'redux';\r\n\r\n// @scripts\r\nimport { githubReducer } from './github';\r\nimport { loadingReducer } from './loading';\r\nimport { settingsReducer } from './settings';\r\n\r\nconst mainReducer = combineReducers({\r\n  github: githubReducer,\r\n  loading: loadingReducer,\r\n  settings: settingsReducer,\r\n});\r\n\r\nexport const rootReducer = (state, action) => {\r\n  const currentState = state;\r\n  return mainReducer(currentState, action);\r\n};\r\n","// @config\r\nimport { configuration } from '../../configuration';\r\n\r\n// @actions\r\nimport { TOGGLE_LOADING_PAGE_VISIBILITY } from '../actions';\r\n\r\nexport const loadingReducer = (\r\n  state = configuration.initialState.loading, action\r\n) => {\r\n  switch (action.type) {\r\n    case TOGGLE_LOADING_PAGE_VISIBILITY:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","// @packages\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { createLogger } from 'redux-logger';\r\nimport { createStore, applyMiddleware } from 'redux';\r\n\r\n// @reducers\r\nimport { rootReducer } from './reducers';\r\n\r\n// @state\r\nimport initialState from './state/initial-state.json';\r\n\r\nconst createReduxStore = () => {\r\n  const reduxLogger = createLogger();\r\n  const middlewares = [\r\n    reduxLogger,\r\n    thunk,\r\n  ];\r\n\r\n  const state = initialState;\r\n\r\n  const store = createStore(\r\n    rootReducer,\r\n    state,\r\n    composeWithDevTools(\r\n      applyMiddleware(...middlewares)\r\n    )\r\n  );\r\n\r\n  return store;\r\n};\r\n\r\nexport default createReduxStore();\r\n","/* eslint-disable camelcase */\r\n\r\n// @english\r\nimport en_US from './english/en_US.json';\r\n\r\n// @spanish\r\nimport es_LA from './spanish/es_LA.json';\r\n\r\nexport default {\r\n  en_US,\r\n  es_LA,\r\n};\r\n","// @http\r\nimport { addHttpInterceptors } from './http-interceptors';\r\n\r\n// @store\r\nimport { reduxStore } from '../store';\r\n\r\nconst getCore = () => {\r\n  if (global.core) {\r\n    return global.core;\r\n  }\r\n\r\n  const core = {\r\n    store: reduxStore,\r\n  };\r\n\r\n  addHttpInterceptors({ store: core.store });\r\n\r\n  global.core = core;\r\n  return global.core;\r\n};\r\n\r\nexport const { store } = getCore();\r\n","// @packages\r\nimport axios from 'axios';\r\n\r\n// @actions\r\nimport { toggleLoadingPageVisibility } from '../store/actions';\r\n\r\nconst handleLoadingPageVisibility = ({ show, store }) => {\r\n  store.dispatch(toggleLoadingPageVisibility(false));\r\n\r\n  if (!store.getState().loading.visible && show) {\r\n    store.dispatch(toggleLoadingPageVisibility(true));\r\n  }\r\n\r\n  if (store.getState().loading.visible && !show) {\r\n    store.dispatch(toggleLoadingPageVisibility(false));\r\n  }\r\n};\r\n\r\nexport const addRequestInterceptors = ({ store }) => {\r\n  axios.interceptors.request.use(\r\n    (request) => {\r\n      handleLoadingPageVisibility({ show: true, store });\r\n      return request;\r\n    },\r\n    (error) => Promise.reject(error)\r\n  );\r\n};\r\n\r\nexport const addResponseInterceptors = ({ store }) => {\r\n  axios.interceptors.response.use(\r\n    (response) => {\r\n      handleLoadingPageVisibility({ show: false, store });\r\n      return response.data;\r\n    },\r\n    (error) => {\r\n      handleLoadingPageVisibility({ show: false, store });\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n};\r\n\r\nexport const addHttpInterceptors = ({ store }) => {\r\n  addRequestInterceptors({ store });\r\n  addResponseInterceptors({ store });\r\n};\r\n"],"sourceRoot":""}